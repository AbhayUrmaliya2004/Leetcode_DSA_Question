/*
* Leetcode :- 2140
* T.C :- O(2*N)
* S.C :- O(2*N)
* Typical take or notTake question and then take the max out of it
*/
class Solution {
    public long mostPoints(int[][] questions) {
        int n=questions.length;
        long[] dp = new long[n];
        Arrays.fill(dp, -1);

        return helper(questions, 0, dp);
    }
    public long helper(int[][] ques, int idx, long[] dp){
        if(idx >= ques.length) return 0;
        if(dp[idx] != -1) return dp[idx];

        long take = ques[idx][0] + helper(ques, idx+ques[idx][1]+1, dp);
        long notTake = helper(ques, idx+1, dp);

        return dp[idx] = Math.max(take, notTake);
    }
}
