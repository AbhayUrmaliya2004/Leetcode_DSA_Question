/*
* Leetcode :- (2579)
* T.C :- O(N)
* S.C :- O(1)
* Intuition :- Brute force each time if we take the north east corner to understand this 
* each time east, west, north, south tip will increase the count by 4
* an then at time min=3, we have 1 common cell to increase in north east corner
* after that at time min=4, we have 2 common cell to increase in north east direction
* thus the formula derived 
*   count += (4 + 4*(min-2));, multiply by 4 for all direction and 4 to add up we can do in loop
* Optimisation :- we can do this in constant time
* summation of 4 + 4*(min-2) = 4[1+min-2] = 4*(min-1) for min>=2
* so we can add this up to get the solution
* CONSTANT TIME CALCULATION
*  4*[2-1 + 3-1 + 4-1 + 5-1 + ...........]
*  4*[2+3+4+5+.......... - 1+1+1.. min times]
*  4*[(min*(min+1)/2)-1 - (min-1)] this is final constant time operation solution
* this long count = 1+4*((min*(min+1)/2)-1 - (min-1)); can be written as 
* long count = 1+4*((min*(min+1)/2) - min));
* Faster than 100%
*/ 
class Solution {
    public long coloredCells(int n) {
        if(n == 1) return 1;

        long min = n;
        long count = 1+4*(((min*(min+1)/2) - min));
        return count;
    }
}
